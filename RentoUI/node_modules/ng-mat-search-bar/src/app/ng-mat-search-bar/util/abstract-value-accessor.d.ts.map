{"version":3,"file":"abstract-value-accessor.d.ts","sources":["abstract-value-accessor.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ControlValueAccessor } from '@angular/forms';\nexport declare abstract class AbstractControlValueAccessor<T> implements ControlValueAccessor {\n    value: string;\n    /**\n     * Invoked when the model has been changed\n     */\n    onChange: (_: any) => void;\n    /**\n     * Invoked when the model has been touched\n     */\n    onTouched: () => void;\n    /**\n     * Method that is invoked on an update of a model.\n     */\n    updateChanges(): void;\n    /**\n     * Writes a new item to the element.\n     * @param value the value\n     */\n    writeValue(value: string): void;\n    /**\n     * Registers a callback function that should be called when the control's value changes in the UI.\n     * @param fn\n     */\n    registerOnChange(fn: any): void;\n    /**\n     * Registers a callback function that should be called when the control receives a blur event.\n     * @param fn\n     */\n    registerOnTouched(fn: any): void;\n}\n"]}